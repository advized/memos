****************************
RVM (Ruby Version Manager)
****************************
# use/create and define as default a gemset
rvm use 1.9.3@rails3tutorial2nd --create --default 

# list all gemsets and current one
rvm gemset list


****************************
Rake
****************************
# Precompile assets
bundle exec rake assets:precompile # bundle install ensure that gem rake version specified 
                                   # in the appli Gemfile is used

# To create db specified in database.yml
rake db:create:all

# Deploy database to production
rake db:migrate RAILS_ENV=production

# To undo a single migration step
rake db:rollback

# To go all the way back to the beginning
rake db:migrate VERSION=0


****************************
Bundle
****************************
# Install gems for specific rails application
bundle install --without production # here without production group (see Gemfile)

# To eliminate bundle exec
# To avoid to call bundle exec rake/rspec ...
# in order to get sure that we user proper gem version
rvm get head && rvm reload
chmod +x $rvm_path/hooks/after_cd_bundler
# then in your app_folder
bundle install --binstubs=./bundler_stubs
# Add bundler_stubs in your .gitignore


****************************
Rails
****************************
# Create new rails application
rails new application_name  # or
rails new application_name --skip-test-unit # if want to skip unit tests
                                            # we will use RSpec instead
rails new myapp --database=postgresql # With postgresql

# Generate new model and associated views and controller with scaffold
rails generate scaffold User name:string email:string # here create a users table with 2 attributes 
                                                      # need then to be migrated with rake db:migrate

# Generate controller
rails generate controller StaticPages home help

# Destroy controller
rails destroy controller StaticPages home help

# Launch rails console with the production environment
rails console production


********************************************************
RSpec (Request Specification) Behavior Driven Development
********************************************************
# Specify that we use RSpec in place of Test::Unit
rails generate rspec:install

# Create static_pages_spec.rb in spec/requests directory 
rails generate integration_test static_pages

# Launch a test
bundle exec rspec ../../../spec/requests/static_pages_spec.rb

# How to make testing addictive
# 1. Install Guard to automate the running of the tests
  # Add following line in Gemfile under :development, :test group
  gem 'guard-rspec', '0.5.5'
  # Under : test group add
  gem 'rb-inotify', '0.8.8' # Simple wrapper over the inotify
                            # Linux kernel subsystem for monitoring
                            # changes to files and directories
  gem 'libnotify', '0.5.9'  # Ruby bindings for libnotify using FFI
                            # A small dialog box appearing while
                            # executing test and showing outputs
  bundle install
  bundle exec guard init rspec # Init Guard to work with Rspec
  # Update the Guardfile. Add ':all_after_pass => false' as shown below 
  guard 'rspec', :version => 2, :all_after_pass =>false, do
  # Now start Guard
  bundle exec guard
# 2. Speeding up Tests with Spork
# Avoid to load all rails environment before executing tests
  # Add spork to Gemfile unde :test group
  gem 'guard-spork', '0.3.2'
  gem 'spork', '0.9.0'
  # Install bundle
  bundle install
  # Now bootstrap the Spork configuration
  bundle exec spork --bootstrap 
  # Edit RSpec config file in spec/spec_helper.rb
  # so that environment get loaded ina prefork block
  # This imply copying and pasting block starting by ENV["RAILS_ENV...
  # The edit .rspec file to tell Rspec to use automatically Spork
  # By adding the following line:
  --drb
  # Warning whenever your edit the routes.rb file you will need to 
  # restart spork
  # Now use Spork with Guard
  bundle exec guard init spork
  # Edit the Guard file in order to add the


        

